package com.week3_array_String;

public class StringMethods {

	public static void main(String[] args)
	{

		String s1="Hello All";
		
		//length()
		System.out.println("Total length is:"+s1.length());//9
		
		//toUpperCase() and toLowerCase()
		System.out.println(s1.toUpperCase());
		System.out.println(s1.toLowerCase());
		
		//character from any index: charAt(index)
		System.out.println("Character at index 4: "+s1.charAt(4));
		
		System.out.println("Character at index 0: "+s1.charAt(0));

		/*
		 * String equality
		 * ------------------
		 * 1.equals()[exact matching]
		 * ------------
		 * Case sensitive
		 * 
		 * 2.equalsIgnoreCase()
		 * ---------------------
		 * Not case sensitive
		 * 
		 * IQ:
		 * ==========
		 * 
		 * what is difference between methods and operators(==)?
		 * -------------------------------------------------
		 * == compare id generated by jvm
		 * methods compare data (collection of characters)
		 */
	String act="Selenium WebDriver is WebUI Automation Library.";
	String exp="selenium webDriver is webUI automation library.";
	
		System.out.println("equalS(): "+act.equals(exp));//true//false
		System.out.println("equalsIgnoreCase(): "+act.equalsIgnoreCase(exp));//true
		
		//contains()- partial matching
		System.out.println("Act string contains WebUI?: "+act.contains("WebUI"));//true
		System.out.println("Act string contains testng?: "+act.contains("testng"));//false

		//startsWith(prefix) 
		System.out.println("String starts with Selenium?: "+act.startsWith("Selenium"));//t
		System.out.println("String starts with Sele?: "+act.startsWith("Sele"));//t

		System.out.println("String starts with S?: "+act.startsWith("S"));//t

		System.out.println("String starts with nium?: "+act.startsWith("nium"));//f

		//endsWith(suffix)
		System.out.println("String endswith Library.?: "+act.endsWith("Library."));//t
		
		System.out.println("String endswith Lib?: "+act.endsWith("Lib"));//f

		System.out.println("String endswith ary.?: "+act.endsWith("ary."));//t

		System.out.println("String endswith .?: "+act.endsWith("."));//t

		//concat() / +
		String s2="Welcome";
		String s3="to learn OOP Principles!";
		System.out.println(s2+" "+s3);
		System.out.println(s2.concat(" "+s3));
		
		//trim()- ignore white space before and after string
		
		String s4="         Welcome All           ";
		System.out.println(s4);
		System.out.println(s4.trim());
		System.out.println(s4);
		s4=s4.trim();
		System.out.println(s4);
		
		String s5="";//empty
		System.out.println("Is string empty?: "+s4.isEmpty());//false
		System.out.println("Is string empty?: "+s5.isEmpty());//true
		System.out.println("blank: "+s5.isBlank());//true//Returns true if the string is empty or contains only white space codepoints,otherwise false.
		
		
		//substring()
		
		String s6="Welcome to learn OOP Principles!";
		System.out.println(s6.substring(4));//ome to learn OOP Principles!
		System.out.println(s6.substring(4,12));//beginindex,endindex-1
		
		//tocharArray()
		char arr[]=s6.toCharArray();
//		for(char i:arr)
//		{
//			System.out.println(i);
//		}
		//replace()
		String s7="Java Programming";
		System.out.println(s7.replace('a','*'));
		
		//split(regexp) regular expression is pattern matching
		
		String tools="Selenium,Appium,Postman,Jmeter,QTP";
		System.out.println(tools);
		String data[]=tools.split(",");
		for(String i:data)
		{
			System.out.println(i);
		}
		
		System.out.println(tools.split(",")[3]);//Jmeter
		
		
		//
		String date="June 2024";
		String month=date.split(" ")[0];
		String year=date.split(" ")[1];
		
		System.out.println(month);
		System.out.println(year);
		
		
		/*
		 * live task
		 * from this message test amount is equals to int(1870) if yes 
		 * print valid amount otherwise print invalid
		 * 
		 */
		String billData="Thank you for your order! your bill is 1870";

		String amount=billData.split(" ")[8];
		System.out.println(amount);
		//int
		int price=Integer.parseInt(amount);
		if(price==1870)
		{
			System.out.println("Valid amount");
		}else
		{
			System.out.println("Invalid amount");
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
		
		
		
		
		
		
		
		

	}

}
